/* Comments */

/* --------------Overflow ----------------- 

prevents text from spilling over to next element*/
#test{
    max-height: 100px;
    overflow: scroll
    /* overflow: hidden; */

}

/* Border -- border around the content 
Margin --- margin outside border
 Padding -- betweeen border and the content 
 
 Display:
 inline
 block
 inline block - flow like inline while retaining all other features of block
 flex
 grid
 
 visibility: hidden or visible
 
 border-radius - for rounded border
 */

 /* --------------Position-------------- */

 span{
     position: fixed;
 }
/* position:
static default
relative can be affected by top bottom right left properties
fixed isnt affected by scrolling
absolute: element gets taken out of normal flow nothing affects it (like its not there)
sticky scroll with the viewport until a condition is met then it is fixed e.g. top:0 ie. at the top
 
 z-index: decides which appears over the other e.g. 1 or 2
 float: takes a element leftmost or rightmost (still normal flow)

 NOTE: floated elements can sometimes be ignored in the box
 Solution:
 box property
 overflow:auto
 width:100%
 */

 /* -------------------------------RESPONSIVE ---------------------------------------------- */

 /* responsive positioning */
/* div{
    transform: translate(30vw,30vh); //view width and view height
    background: url();
    background-size: 100% 100% or 100vw 100vh;
} */

/* positioning
    padding/margin
    transform:translate
    top, bottom,left,right (not static)
*/

/* -----------------Aligning Elements ---------------- */
/* Note: Center aligning has no effect if the width property is not set (or set to 100%). 
To center an image, set left and right margin to auto and make it into a block element:*/
h1{
    position: relative;
    margin:auto;
    width: 50%;
}

/* section h1 {
    vertical align block
    position: relative;
    top: 50%;
} */

section{
    height: 50vh;
    background-color: red;
    text-align: center;
    /* -----------Vertical align -----------*/
    /* with padding, flex, line height, position and transform */
     display: flex;
     /* vertical */
    align-items: center; /* all items */ 
    /* horizontal */
    justify-content: center;
}
section:nth-child(even){
    background-color: aquamarine;
}

/* --------FLEX/GRID---------- */
.grid {
    background-color: red;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    height: 50vh;
}

.gridChild {
    border: black solid;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}